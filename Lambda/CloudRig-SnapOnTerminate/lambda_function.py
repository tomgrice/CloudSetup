import json
import boto3
import botocore

#GAMING_INSTANCE_REGION = 'eu-west-2'
#GAMING_INSTANCE_ID = 'i-0d59772ccf2b4250c'

    
def lambda_handler(event, context):
    
    DryRunSetting = False
    
    GAMING_INSTANCE_REGION = event['region']
    GAMING_INSTANCE_ID = event['detail']['instance-id']
    
    
    ec2 = boto3.client('ec2',region_name=GAMING_INSTANCE_REGION)
    res = boto3.resource('ec2', region_name=GAMING_INSTANCE_REGION)
    
    def get_instance_tag(instance_id, tag_key):
        
        instance = res.Instance(instance_id)
        
        instance_tags = instance.tags
        
        tag_value = ''
        for tag in instance_tags:
            if tag["Key"] == tag_key:
                tag_value = tag["Value"]
            
        return tag_value
    
    def create_snapshots(volume_name):
        
        volumes = ec2.describe_volumes(Filters=[{'Name': 'tag:Name', 'Values':[volume_name]}])['Volumes']
        
        result = []
        for volume in volumes:
            volume_id = volume['VolumeId']
            
            volume_res = res.Volume(volume_id)
            snapshot = volume_res.create_snapshot(
                Description='Snapshot generated by SnapAndDelete',
                TagSpecifications=[
                    {
                        'ResourceType': 'snapshot',
                        'Tags': [{'Key': 'Name', 'Value': volume_name},{'Key': 'SnapAndDelete', 'Value': 'True'}]
                    }
                    ],
                DryRun=DryRunSetting
                )
            
            result.append(snapshot)
            
        return result
    
    instance_name = get_instance_tag(GAMING_INSTANCE_ID, 'Name')
    snap_and_delete = get_instance_tag(GAMING_INSTANCE_ID, 'SnapAndDelete').lower() == "true"
    
    print(instance_name)
    print(snap_and_delete)
    
    if snap_and_delete == True:
        if instance_name != '':
            print(create_snapshots(instance_name))
            